/**
 * @FILENAME: camera_ov7663.h
 * @BRIEF camera driver file
 * Copyright (C) 2007 Anyka (GuangZhou) Software Technology Co., Ltd.
 * @AUTHOR 
 * @DATE 2007-10-29
 * @VERSION 1.0
 * @REF
 */ 
#ifndef __CAMERA_OV7663_H__
#define __CAMERA_OV7663_H__


#ifdef USE_CAMERA_OV7663

#define DELAY_FLAG        0xFE   // first parameter is 0xfe, then 2nd parameter is delay time count
#define END_FLAG          0xFF   // first parameter is 0xff, then parameter table is over 

static const T_U8 RESET_TAB[] = 
{
    0x12,0x80, 
    DELAY_FLAG, 10,                            
    0x11,0x81,                             
    0x92,0x00,                             
    0x93,0x00,                             
    0x9d,0x85,  //调整同步频率                           
    0x9e,0x85,  //调整同步频率                           
    0x3b,0x02, //02 for 60Hz, 0a for 50Hz   
    0x13,0xf2,                             
    0x10,0x00,                             
    0x00,0x00,                             
    0x01,0x80,                             
    0x02,0x80,                             
    0x13,0xf7,                             
                                           
    0x12,0x00,                             
    0x04,0x00,                             
    0x18,0x01,                             
    0x17,0x13,                             
    0x32,0x92,                             
    0x19,0x02,                             
    0x1a,0x7a,                             
    0x03,0x00,                             
                                           
    0x0e,0x84,                             
    0x0f,0x62,                             
    0x15,0x02,                             
    0x16,0x02,                             
    0x1b,0x01,                             
    0x1e,0x01,                             
    0x29,0x3c, //20 for internal regulator  
    0x33,0x00,                             
    0x34,0x07,                             
    0x35,0x84,                             
    0x36,0x00,                             
    0x38,0x13,                             
    0x39,0x43,                             
    0x3a,0x0c,                             
    0x3c,0x6c,                             
    0x3d,0x90,                             
    0x3f,0x29,                             
    0x40,0xc1,                             
    0x41,0x20,                             
    0x6b,0x0a,                             
    0xa1,0xc8,                             
                                           
    0x69,0x80,                             
    0x43,0xf0,                             
    0x44,0x10,                             
    0x45,0x78,                             
    0x46,0xa8,                             
    0x47,0x60,                             
    0x48,0x80,                             
    0x59,0xba,                             
    0x5a,0x9a,                             
    0x5b,0x22,                             
    0x5c,0xb9,                             
    0x5d,0x9b,                             
    0x5e,0x10,                             
    0x5f,0xe0,                             
    0x60,0x85, //05 for advanced AWB        
    0x61,0x60,                             
    0x9f,0x9d,                             
    0xa0,0xa0,                             
                                           
    0x4f,0x66,                             
    0x50,0x6b,                             
    0x51,0x05,                             
    0x52,0x19,                             
    0x53,0x40,                             
    0x54,0x59,                             
    0x55,0x40,                             
    0x56,0x40,                             
    0x57,0x40,                             
    0x58,0x0d,                             
                                           
    0x8b,0xcc,                             
    0x8c,0xcc,                             
    0x8d,0xcf,                             
                                           
    0x6c,0x40,                             
    0x6d,0x30,                             
    0x6e,0x4b,                             
    0x6f,0x60,                             
    0x70,0x70,                             
    0x71,0x70,                             
    0x72,0x70,                             
    0x73,0x70,                             
    0x74,0x60,                             
    0x75,0x60,                             
    0x76,0x50,                             
    0x77,0x48,                             
    0x78,0x3a,                             
    0x79,0x2e,                             
    0x7a,0x28,                             
    0x7b,0x22,                             
    0x7c,0x04,                             
    0x7d,0x07,                             
    0x7e,0x10,                             
    0x7f,0x28,                             
    0x80,0x36,                             
    0x81,0x44,                             
    0x82,0x52,                             
    0x83,0x60,                             
    0x84,0x6c,                             
    0x85,0x78,                             
    0x86,0x8c,                             
    0x87,0x9e,                             
    0x88,0xbb,                             
    0x89,0xd2,                             
    0x8a,0xe6,                             
                                           
    0x14,0x2e,                             
    0x24,0x68,                             
    0x25,0x5C,                             

	END_FLAG,END_FLAG
};

static const T_U8 VGA_TO_SXGA_TAB[] = 
{
	0x12,0x00, 
    0x04,0x00,
    0x18,0x01,
    0x17,0x13, 
    0x32,0x92,
    0x19,0x02,
    0x1a,0x7a,
    0x03,0x00,
	END_FLAG, END_FLAG
};
    
static const T_U8 SXGA_MODE_TAB[] = 
{
	0x12,0x00, 
    0x04,0x00,
    0x18,0x01,
    0x17,0x13, 
    0x32,0x92,
    0x19,0x02,
    0x1a,0x7a,
    0x03,0x00,
	END_FLAG, END_FLAG
};

static const T_U8 VGA_MODE_TAB[] = 
{
	0x12,0x00, 
    0x04,0x00,
    0x18,0x01,
    0x17,0x13, 
    0x32,0x92,
    0x19,0x02,
    0x1a,0x7a,
    0x03,0x00,
	END_FLAG, END_FLAG
};

static const T_U8 CIF_MODE_TAB[] = 
{
	0x12,0x20,      
	0x04,0x00,      
	0x18,0x80,      
	0x17,0x28,      
	0x32,0x92,      
	0x19,0x02,      
	0x1a,0x7a,      
	0x03,0x00,      

	END_FLAG, END_FLAG
};

static const T_U8 QVGA_MODE_TAB[] = 
{
   0x00,0x00,
   0x12,0x10, 
   0x04,0x00, 
   0x18,0x4b, 
   0x17,0x23, 
   0x32,0xbf, 
   0x19,0x02, 
   0x1a,0x7a, 
   0x03,0x00, 
	
	END_FLAG, END_FLAG
};

static const T_U8 QCIF_MODE_TAB[] = 
{
   0x12,0x08, 
   0x04,0x04, 
   0x18,0x80, 
   0x17,0x28, 
   0x32,0x92, 
   0x19,0x02, 
   0x1a,0x4a, 
   0x03,0x00, 

	END_FLAG, END_FLAG
};

static const T_U8 QQVGA_MODE_TAB[] = 
{
   0x12,0x10, 
   0x04,0x24, 
   0x18,0x4b, 
   0x17,0x23, 
   0x32,0xbf, 
   0x19,0x02, 
   0x1a,0x7a, 
   0x03,0x00, 

	END_FLAG, END_FLAG
};

//setup exposure mode:whole, center, middle
static const T_U8 EXPOSURE_WHOLE_TAB[] = 
{
	END_FLAG, END_FLAG
};

static const T_U8 EXPOSURE_CENTER_TAB[] =
{
	END_FLAG, END_FLAG
};

static const T_U8 EXPOSURE_MIDDLE_TAB[] = 
{
	END_FLAG, END_FLAG
};

//the following codes define the exposure level
static const T_U8 EP_ADD_4_TAB[] =
{
	END_FLAG, END_FLAG
};

static const T_U8 EP_0_TAB[] = 
{
	END_FLAG, END_FLAG
};

static const T_U8 EP_SUB_4_TAB[] = 
{
	END_FLAG, END_FLAG
};

static const T_U8 BRIGHTNESS_0_TAB[] = 
{
   0x0f,0x6a,
   0x24,0x50,
   0x25,0x40,
   0x27,0xa0,
   0x28,0xa0,
   0x2c,0xa0,
   END_FLAG, END_FLAG
};

static const T_U8 BRIGHTNESS_1_TAB[] = 
{
    0x0f,0x6a, 
    0x24,0x60, 
    0x25,0x50, 
    0x27,0x90, 
    0x28,0x90, 
    0x2c,0x90, 
	
	END_FLAG, END_FLAG
};

static const T_U8 BRIGHTNESS_2_TAB[] = 
{
    0x0f,0x6a, 
    0x24,0x70, 
    0x25,0x60, 
    0x27,0x88, 
    0x28,0x88, 
    0x2c,0x88, 
	
	END_FLAG, END_FLAG
};

static const T_U8 BRIGHTNESS_3_TAB[] = 
{
    0x0f,0x6a,
    0x24,0x80,
    0x25,0x70,
    0x27,0x80,
    0x28,0x80,
    0x2c,0x80,

	END_FLAG, END_FLAG
};

static const T_U8 BRIGHTNESS_4_TAB[] = 
{
    0x0f,0x6a,
    0x24,0x90,
    0x25,0x80,
    0x27,0x20,
    0x28,0x20,
    0x2c,0x20,

	END_FLAG, END_FLAG
};

static const T_U8 BRIGHTNESS_5_TAB[] = 
{
    0x0f,0x6a,
    0x24,0xa0,
    0x25,0x90,
    0x27,0x40,
    0x28,0x40,
    0x2c,0x40,
	
	END_FLAG, END_FLAG
};

static const T_U8 BRIGHTNESS_6_TAB[] = 
{
    0x0f,0x6a,
    0x24,0xb0,
    0x25,0xa0,
    0x27,0x60,
    0x28,0x60,
    0x2c,0x60,

	END_FLAG, END_FLAG
};

static const T_U8 CONTRAST_1_TAB[] = 
{
    0x6C,0x20,
    0x6D,0x50,
    0x6E,0x80,
    0x6F,0xC0,
    0x70,0xC0,
    0x71,0xA0,
    0x72,0x90,
    0x73,0x78,
    0x74,0x78,
    0x75,0x78,
    0x76,0x40,
    0x77,0x20,
    0x78,0x20,
    0x79,0x20,
    0x7A,0x1E,
    0x7B,0x09,
    0x7C,0x02,
    0x7D,0x07,
    0x7E,0x17,
    0x7F,0x47,
    0x80,0x5F,
    0x81,0x73,
    0x82,0x85,
    0x83,0x94,
    0x84,0xA3,
    0x85,0xB2,
    0x86,0xC2,
    0x87,0xCA,
    0x88,0xDA,
    0x89,0xEA,
    0x8A,0xF9,

	END_FLAG, END_FLAG
};

static const T_U8 CONTRAST_2_TAB[] = 
{
    0x7C,0x04, 
    0x7D,0x07, 
    0x7E,0x1f, 
    0x7F,0x49, 
    0x80,0x5a, 
    0x81,0x6a, 
    0x82,0x79, 
    0x83,0x87, 
    0x84,0x94, 
    0x85,0x9f, 
    0x86,0xaf, 
    0x87,0xbb, 
    0x88,0xcf, 
    0x89,0xdf, 
    0x8A,0xee, 
    0x6C,0x20, 
    0x6D,0x50, 
    0x6E,0xc0, 
    0x6F,0xa8, 
    0x70,0x88, 
    0x71,0x80, 
    0x72,0x78, 
    0x73,0x70, 
    0x74,0x68, 
    0x75,0x58, 
    0x76,0x40, 
    0x77,0x30, 
    0x78,0x28, 
    0x79,0x20, 
    0x7A,0x1e, 
    0x7B,0x18, 

	END_FLAG, END_FLAG
};

static const T_U8 CONTRAST_3_TAB[] = 
{
    0x7C,0x02,
    0x7D,0x06,
    0x7E,0x16,
    0x7F,0x3A,
    0x80,0x4C,
    0x81,0x5C,
    0x82,0x6A,
    0x83,0x78,
    0x84,0x84,
    0x85,0x8E,
    0x86,0x9E,
    0x87,0xAE,
    0x88,0xC2,
    0x89,0xDA,
    0x8A,0xEA,
    0x6C,0x20,
    0x6D,0x40,
    0x6E,0x80,
    0x6F,0x90,
    0x70,0x90,
    0x71,0x80,
    0x72,0x70,
    0x73,0x70,
    0x74,0x60,
    0x75,0x50,
    0x76,0x40,
    0x77,0x40,
    0x78,0x30,
    0x79,0x28,
    0x7A,0x20,
    0x7B,0x1d,

	END_FLAG, END_FLAG
};

static const T_U8 CONTRAST_4_TAB[] = 
{
    0x7C,0x04,
    0x7D,0x07,
    0x7E,0x10,
    0x7F,0x28,
    0x80,0x36,
    0x81,0x44,
    0x82,0x52,
    0x83,0x60,
    0x84,0x6C,
    0x85,0x78,
    0x86,0x8C,
    0x87,0x9E,
    0x88,0xBB,
    0x89,0xD2,
    0x8A,0xE6,
    0x6C,0x40,
    0x6D,0x30,
    0x6E,0x4B,
    0x6F,0x60,
    0x70,0x70,
    0x71,0x70,
    0x72,0x70,
    0x73,0x70,
    0x74,0x60,
    0x75,0x60,
    0x76,0x50,
    0x77,0x48,
    0x78,0x3A,
    0x79,0x2E,
    0x7A,0x28,
    0x7B,0x22,
    
	END_FLAG, END_FLAG
};

static const T_U8 CONTRAST_5_TAB[] = 
{
    0x7C,0x04,
    0x7D,0x09,
    0x7E,0x13,
    0x7F,0x29,
    0x80,0x35,
    0x81,0x41,
    0x82,0x4D,
    0x83,0x59,
    0x84,0x64,
    0x85,0x6F,
    0x86,0x85,
    0x87,0x97,
    0x88,0xB7,
    0x89,0xCF,
    0x8A,0xE3,
    0x6C,0x40,
    0x6D,0x50,
    0x6E,0x50,
    0x6F,0x58,
    0x70,0x60,
    0x71,0x60,
    0x72,0x60,
    0x73,0x60,
    0x74,0x58,
    0x75,0x58,
    0x76,0x58,
    0x77,0x48,
    0x78,0x40,
    0x79,0x30,
    0x7A,0x28,
    0x7B,0x26,

	END_FLAG, END_FLAG
};

static const T_U8 CONTRAST_6_TAB[] = 
{
	0x7c,0x05, 
    0x7d,0x0b, 
    0x7e,0x16, 
    0x7f,0x2c, 
    0x80,0x37, 
    0x81,0x41, 
    0x82,0x4b, 
    0x83,0x55, 
    0x84,0x5f, 
    0x85,0x69, 
    0x86,0x7c, 
    0x87,0x8f, 
    0x88,0xb1, 
    0x89,0xcf, 
    0x8a,0xe5, 
    0x6c,0x50, 
    0x6d,0x60, 
    0x6e,0x58, 
    0x6f,0x58, 
    0x70,0x58, 
    0x71,0x50, 
    0x72,0x50, 
    0x73,0x50, 
    0x74,0x50, 
    0x75,0x50, 
    0x76,0x4c, 
    0x77,0x4c, 
    0x78,0x45, 
    0x79,0x3c, 
    0x7a,0x2c, 
    0x7b,0x24, 

	END_FLAG, END_FLAG
};

static const T_U8 CONTRAST_7_TAB[] = 
{
    0x7c,0x04, 
    0x7d,0x09, 
    0x7e,0x14, 
    0x7f,0x28, 
    0x80,0x32, 
    0x81,0x3C, 
    0x82,0x46, 
    0x83,0x4F, 
    0x84,0x58, 
    0x85,0x61, 
    0x86,0x73, 
    0x87,0x85, 
    0x88,0xA5, 
    0x89,0xc5, 
    0x8a,0xDD, 
    0x6c,0x40, 
    0x6d,0x50, 
    0x6e,0x58, 
    0x6f,0x50, 
    0x70,0x50, 
    0x71,0x50, 
    0x72,0x50, 
    0x73,0x50, 
    0x74,0x48, 
    0x75,0x48, 
    0x76,0x48, 
    0x77,0x48, 
    0x78,0x40, 
    0x79,0x40, 
    0x7a,0x30, 
    0x7b,0x2E, 


	END_FLAG, END_FLAG
};

static const T_U8 SATURATION_1_TAB[] = 
{
	0x4f,0x9a,
	0x50,0xa1,
	0x51,0x07,
	0x52,0x26,
	0x53,0x60,
	0x54,0x86,

	END_FLAG, END_FLAG
};

static const T_U8 SATURATION_2_TAB[] = 
{
    0x4f,0x80,
    0x50,0x86,
    0x51,0x06,
    0x52,0x20,
    0x53,0x50,
    0x54,0x70,

	END_FLAG, END_FLAG
};

static const T_U8 SATURATION_3_TAB[] = 
{
	0x4f,0x66,
    0x50,0x6B,
    0x51,0x05,
    0x52,0x1A,
    0x53,0x40,
    0x54,0x5A,

	END_FLAG, END_FLAG
};

static const T_U8 SATURATION_4_TAB[] = 
{
    0x4f,0x4D,
    0x50,0x50,
    0x51,0x04,
    0x52,0x13,
    0x53,0x30,
    0x54,0x43,

	END_FLAG, END_FLAG
};

static const T_U8 SATURATION_5_TAB[] = 
{
    0x4f,0x33,
    0x50,0x36,
    0x51,0x02,
    0x52,0x0D,
    0x53,0x20,
    0x54,0x2D,

	END_FLAG, END_FLAG
};


static const T_U8 SHARPNESS_0_TAB[] = 
{
	END_FLAG, END_FLAG
};

static const T_U8 SHARPNESS_1_TAB[] = 
{
	END_FLAG, END_FLAG
};

static const T_U8 SHARPNESS_2_TAB[] = 
{
	END_FLAG, END_FLAG
};

static const T_U8 SHARPNESS_3_TAB[] = 
{
	END_FLAG, END_FLAG
};

static const T_U8 SHARPNESS_4_TAB[] = 
{
	END_FLAG, END_FLAG
};

static const T_U8 SHARPNESS_5_TAB[] = 
{
	END_FLAG, END_FLAG
};

static const T_U8 SHARPNESS_6_TAB[] = 
{
	END_FLAG, END_FLAG
};

//the following codes define the AWB mode:
static const T_U8 AWB_AUTO_TAB[] = 
{
	END_FLAG, END_FLAG
};

static const T_U8 AWB_SUNNY_TAB[] = 
{
	END_FLAG, END_FLAG
};

static const T_U8 AWB_CLOUDY_TAB[] = 
{
	END_FLAG, END_FLAG
};

static const T_U8 AWB_OFFICE_TAB[] = 
{
	END_FLAG, END_FLAG
};

static const T_U8 AWB_HOME_TAB[] = 
{
	END_FLAG, END_FLAG
};

static const T_U8 AWB_NIGHT_TAB[] = 
{
	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_NORMAL_TAB[] = 
{
	/* Normal */
	0x3a, 0x0c,
	0x67, 0x80,
	0x68, 0x80,
    
	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_SEPIA_TAB[] = 
{
	/* Black/White */
	0x3a, 0x1c,
	0x67, 0x80,
	0x68, 0x80,

	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_ANTIQUE_TAB[] = 
{
	/* Antique */
	0x3a, 0x1c,
	0x67, 0x40,
	0x68, 0xb0,

	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_BLUISH_TAB[] = 
{
	/* Bluish */
	0x3a,0x1c,
	0x67,0xc0,
	0x68,0x80,

	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_GREENISH_TAB[] = 
{
	0x3a, 0x2c,
	0x67, 0x80,
	0x68, 0x80,
	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_REDDISH_TAB[] = 
{
	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_NEGATIVE_TAB[] = 
{
	/* Negative */
	0x3a, 0x28,
	0x67, 0x80,
	0x68, 0x80,
	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_BW_TAB[] = 
{
        /* Black/White */
	0x3a, 0x1c,
	0x67, 0x80,
	0x68, 0x80,

	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_BWN_TAB[] = 
{
	/* B/W Negative */
	0x3a, 0x3c,
	0x67,0x80,
	0x68,0x80,
	END_FLAG, END_FLAG
};


static const T_U8 PLL_1X_TAB[] = 
{
	0x11, 0x80,
	END_FLAG, END_FLAG
};

static const T_U8 PLL_2X_TAB[] = 
{
	0x11, 0x81,
	END_FLAG, END_FLAG
};

static const T_U8 PLL_3X_TAB[] =
{
	0x11, 0x82,
	END_FLAG, END_FLAG
};

static const T_U8 PLL_4X_TAB[] = 
{
	0x11, 0x83,
	END_FLAG, END_FLAG
};

#endif
#endif

