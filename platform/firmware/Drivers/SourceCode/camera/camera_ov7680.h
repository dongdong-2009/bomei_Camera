/**
 * @FILENAME: camera_ov7680.h
 * @BRIEF camera driver file
 * Copyright (C) 2008 Anyka (GuangZhou) Software Technology Co., Ltd.
 * @AUTHOR 
 * @DATE 2008-03-06
 * @VERSION 1.0
 * @REF
 */ 
#ifndef __CAMERA_OV7680_H__
#define __CAMERA_OV7680_H__


#ifdef USE_CAMERA_OV7680

#define DELAY_FLAG        0xFE   // first parameter is 0xfe, then 2nd parameter is delay time count
#define END_FLAG          0xFF   // first parameter is 0xff, then parameter table is over 


static const T_U8 INIT_TAB[] = 
{
	// MCLK = 24MHz
	// 12.5fps, 50/60Hz
	0x12, 0x80,
	DELAY_FLAG, 10,
	0x1e, 0x91,
	0x14, 0xa2, //0xa1 to 0xa2, auto banding
	0x63, 0x0b,
	0x64, 0x0f,
	0x65, 0x07,
	0x12, 0x01,
	0x0c, 0x06,
	0x82, 0x9A,
	0x22, 0x40,
	0x23, 0x20,
	0x31, 0x11,
	0x40, 0x20, //10
	0x4a, 0x42,
	0x4b, 0x42, //64
	0x67, 0x50,
	0x6b, 0x00,
	0x6c, 0x00,
	0x6d, 0x00,
	0x6e, 0x00,

	0x42, 0x4a,
	0x45, 0x40,
	0x3f, 0x46,
	0x48, 0x20,
	0x21, 0x23,
	0x5a, 0x10,
	0x5c, 0xe0,
	0x27, 0x33,
	0x4d, 0x2d, //1d
	0x42, 0x4a,
	0x4e, 0x54, //IO2.8v
	0x65, 0x87,
	0x66, 0x02,
	0x67, 0x5c,

	0x32, 0x20,
	0x33, 0x00,
	0x34, 0x20,
	0x35, 0x28,
	0x36, 0x20,
	0x37, 0x24,
	0x2f, 0x0c,
	0x30, 0x10,
	0x38, 0x84,
	0x31, 0x0f,

	0x55, 0x86,
	0x58, 0x83,
	0x38, 0x84,
	0x59, 0x0e,
	0x5f, 0x20,
	0x56, 0x40,
	0x51, 0x00,
	0x57, 0x22,
	0x59, 0x07,
	0x5f, 0xa3,
	0x59, 0x08,
	0x5f, 0x54,
	0x52, 0x30,
	0x56, 0x29,
	0x53, 0x20,
	0x54, 0x30,
	0x59, 0x00,
	0x5f, 0xf0,
	0x59, 0x01,
	0x5f, 0xF0,
	0x59, 0x0F,
	0x5f, 0x20,
	0x5f, 0x00,
	0x59, 0x10,
	0x5f, 0x7E,
	0x59, 0x0A,
	0x5f, 0x80,
	0x59, 0x0B,
	0x5f, 0x01,
	0x59, 0x0C,
	0x5f, 0x07,
	0x5f, 0x0F,
	0x59, 0x0D,
	0x5f, 0x20,
	0x59, 0x09,
	0x5f, 0x30,
	0x59, 0x02,
	0x5f, 0x80,
	0x59, 0x03,
	0x5f, 0x60,
	0x59, 0x04,
	0x5f, 0xF0,
	0x59, 0x05,
	0x5f, 0x80,
	0x59, 0x06,
	0x5f, 0x04,
	0x59, 0x26,
	0x59, 0x0b,
	0x5f, 0x31,
	0x55, 0xa8,

	0x27, 0xb3,
	0x40, 0x20,
	0x4d, 0x1d,

	0x12, 0x00,
	0x0c, 0x06,   //0x16 to 0x06
	0x82, 0x98,
	0x3e, 0x30,
	0x81, 0x06,

	0xb7, 0x98,
	0xb8, 0x98,
	0xb9, 0x00,
	0xba, 0x28,
	0xbb, 0x70,
	0xbc, 0x98,
	0xbd, 0x5a,
	0xbe, 0xb0,
	0xbf, 0x9d,
	0xc0, 0x13,
	0xc1, 0x16,
	0xc2, 0x7b,
	0xc3, 0x91,
	0xc4, 0x1e,
	0xc5, 0x9d,
	0xc6, 0x9a,
	0xc7, 0x03,
	0xc8, 0x2e,
	0xc9, 0x91,
	0xca, 0xbf,
	0xcb, 0x1e,

	0xaf, 0x1a,
	0xa0, 0x05,
	0xa1, 0x10,
	0xa2, 0x28,
	0xa3, 0x58,
	0xa4, 0x6a,
	0xa5, 0x7c,
	0xa6, 0x88,
	0xa7, 0x94,
	0xa8, 0x9c,
	0xa9, 0xa6,
	0xaa, 0xb4,
	0xab, 0xc1,
	0xac, 0xd0,
	0xad, 0xdd,
	0xae, 0xec,

	0x89, 0x5c,
	0x8a, 0x11,
	0x8b, 0x92,
	0x8c, 0x11,
	0x8d, 0x52,
	0x96, 0xff,
	0x97, 0x00,
	0x9c, 0xf0,
	0x9d, 0xf0,
	0x9e, 0xf0,

	0xb2, 0x06,
	0xb3, 0x03,
	0xb4, 0x05,
	0xb5, 0x04,
	0xb6, 0x02, //03

	0xd5, 0x02,
	0xdb, 0x40,
	0xdc, 0x40,

#if (defined(CHIP_AK7801) || defined(CHIP_AK7802))
	0x11, 0x00,   //0x01 to 0x00, divider = 1
	0x29, 0x00,   
#else
	0x11, 0x00,   //0x01 to 0x00, divider = 1
	0x29, 0x10,   //add, 4x pll
#endif
	0x24, 0x74,
	0x25, 0x68,
	0x26, 0xb3,
	0x2c, 0x67,

	0x4f, 0x4c,
	0x50, 0x3f,
	0x21, 0x79,

	0x5a, 0x14,
	0x5b, 0xe3,
	0x5c, 0x70,
	0x5d, 0x30,
	0x81, 0x07,

	0x84, 0x02,

	0x13, 0xff,

	END_FLAG, END_FLAG
};

static const T_U8 VGA_MODE_TAB[] = 
{
#if (defined(CHIP_AK7801) || defined(CHIP_AK7802))
	0x11, 0x00,   //0x01 to 0x00, divider = 1
	0x29, 0x00,   
#else
	0x11, 0x00,   //0x01 to 0x00, divider = 1
	0x29, 0x10,   //add, 4x pll
#endif

	0x16, 0x08,
	0x17, 0x1a,
	0x18, 0xa4,
	0x19, 0x03,
	0x1a, 0xf2,
	
	0x81, 0x07,
	0x84, 0x62,
 	0xd0, 0xa4,
	0xd1, 0x78,	
 	0xd2, 0xa0,
	0xd3, 0x78,
	0xd4, 0x20,
			
	END_FLAG, END_FLAG
};

static const T_U8 CIF_MODE_TAB[] = 
{
#if (defined(CHIP_AK7801) || defined(CHIP_AK7802))
	0x11, 0x00,   //0x01 to 0x00, divider = 1
	0x29, 0x00,   
#else
	0x11, 0x00,   //0x01 to 0x00, divider = 1
	0x29, 0x10,   //add, 4x pll
#endif
	
	0x16, 0x08,
	0x17, 0x1a,
	0x18, 0xa4,
	0x19, 0x03,
	0x1a, 0xf2,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0xa4,
	0xd1, 0x78,	
 	0xd2, 0x58,
	0xd3, 0x48,
	0xd4, 0x20,
	
	END_FLAG, END_FLAG
};

static const T_U8 QVGA_MODE_TAB[] = 
{
#if (defined(CHIP_AK7801) || defined(CHIP_AK7802))
	0x11, 0x00,   //0x01 to 0x00, divider = 1
	0x29, 0x00,   
#else
	0x11, 0x00,   //0x01 to 0x00, divider = 1
	0x29, 0x10,   //add, 4x pll
#endif

	0x16, 0x08,
	0x17, 0x1a,
	0x18, 0xa4,
	0x19, 0x03,
	0x1a, 0xf2,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0xa4,
	0xd1, 0x78,	
 	0xd2, 0x50,
	0xd3, 0x3c,
	0xd4, 0x20,
		
	END_FLAG, END_FLAG
};

static const T_U8 QCIF_MODE_TAB[] = 
{
#if (defined(CHIP_AK7801) || defined(CHIP_AK7802))
	0x11, 0x00,   //0x01 to 0x00, divider = 1
	0x29, 0x00,   
#else
	0x11, 0x00,   //0x01 to 0x00, divider = 1
	0x29, 0x10,   //add, 4x pll
#endif

	0x16, 0x08,
	0x17, 0x1a,
	0x18, 0xa4,
	0x19, 0x03,
	0x1a, 0xf2,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0xa4,
	0xd1, 0x78,	
 	0xd2, 0x2c,
	0xd3, 0x24,
	0xd4, 0x20,
		
	END_FLAG, END_FLAG
};

static const T_U8 QQVGA_MODE_TAB[] = 
{
#if (defined(CHIP_AK7801) || defined(CHIP_AK7802))
	0x11, 0x00,   //0x01 to 0x00, divider = 1
	0x29, 0x00,   
#else
	0x11, 0x00,   //0x01 to 0x00, divider = 1
	0x29, 0x10,   //add, 4x pll
#endif

	0x16, 0x08,
	0x17, 0x1a,
	0x18, 0xa4,
	0x19, 0x03,
	0x1a, 0xf2,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0xa4,
	0xd1, 0x78,	
 	0xd2, 0x28,
	0xd3, 0x1e,
	0xd4, 0x20,
	
	END_FLAG, END_FLAG
};

static const T_U8 PREV_MODE_TAB[] = 
{
#if (defined(CHIP_AK7801) || defined(CHIP_AK7802))
	0x11, 0x00,   //0x01 to 0x00, divider = 1
	0x29, 0x00,   
#else
	0x11, 0x00,   //0x01 to 0x00, divider = 1
	0x29, 0x10,   //add, 4x pll
#endif

	0x16, 0x08,
	0x17, 0x1a,
	0x18, 0xa4,
	0x19, 0x03,
	0x1a, 0xf2,
	
	0x81, 0x07,
	0x84, 0x62,
 	0xd0, 0xa4,
	0xd1, 0x78,	
 	0xd2, 0xa0,
	0xd3, 0x78,
	0xd4, 0x20,
			
	END_FLAG, END_FLAG
};

static const T_U8 RECORD_MODE_TAB[] = 
{
	// 25fps
#if (defined(CHIP_AK7801) || defined(CHIP_AK7802))
	//640*480
	0x11, 0x01,   
	0x29, 0x10,   //add, 4x pll

	0x16, 0x08,
	0x17, 0x1a,
	0x18, 0xa4,
	0x19, 0x03,
	0x1a, 0xf2,
	
	0x81, 0x07,
	0x84, 0x62,
 	0xd0, 0xa4,
	0xd1, 0x78,	
 	0xd2, 0xa0,
	0xd3, 0x78,
	0xd4, 0x20,
#else
	//352*288
	0x11, 0x00,   //0x01 to 0x00, divider = 1
	0x29, 0x30,   //add, 8x pll
	
	0x16, 0x08,
	0x17, 0x1a,
	0x18, 0xa4,
	0x19, 0x03,
	0x1a, 0xf2,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0xa4,
	0xd1, 0x78,	
 	0xd2, 0x58,
	0xd3, 0x48,
	0xd4, 0x20,
#endif
	
	END_FLAG, END_FLAG
};

/*
static const T_U8 VGA_MODE_ZOOM0_TAB[] = 
{
	0x16, 0x08,
	0x17, 0x1a,
	0x18, 0xa4,
	0x19, 0x03,
	0x1a, 0xf2,
	
	0x81, 0x07,
	0x84, 0x62,
 	0xd0, 0xa4,
	0xd1, 0x78,	
 	0xd2, 0xa0,
	0xd3, 0x78,
	0xd4, 0x20,
			
	END_FLAG, END_FLAG
};

static const T_U8 CIF_MODE_ZOOM0_TAB[] = 
{
	0x16, 0x08,
	0x17, 0x1a,
	0x18, 0xa4,
	0x19, 0x03,
	0x1a, 0xf2,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0xa4,
	0xd1, 0x78,	
 	0xd2, 0x58,
	0xd3, 0x48,
	0xd4, 0x20,
	
	END_FLAG, END_FLAG
};

static const T_U8 CIF_MODE_ZOOM1_TAB[] = 
{
	0x16, 0x19,
	0x17, 0x2a,
	0x18, 0x83,
	0x19, 0x0b,
	0x1a, 0xd0,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x83,
	0xd1, 0x68,	
 	0xd2, 0x58,
	0xd3, 0x48,
	0xd4, 0x80,
	
	END_FLAG, END_FLAG
};

static const T_U8 CIF_MODE_ZOOM2_TAB[] = 
{
	0x16, 0x06,
	0x17, 0x32,
	0x18, 0x73,
	0x19, 0x12,
	0x1a, 0xb5,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x73,
	0xd1, 0x5a,	
 	0xd2, 0x58,
	0xd3, 0x48,
	0xd4, 0x20,
	
	END_FLAG, END_FLAG
};

static const T_U8 CIF_MODE_ZOOM3_TAB[] = 
{
	0x16, 0x07,
	0x17, 0x39,
	0x18, 0x64,
	0x19, 0x18,
	0x1a, 0x9d,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x64,
	0xd1, 0x4e,	
 	0xd2, 0x58,
	0xd3, 0x48,
	0xd4, 0x20,
	
	END_FLAG, END_FLAG
};

static const T_U8 CIF_MODE_ZOOM4_TAB[] = 
{
	0x16, 0x16,
	0x17, 0x3d,
	0x18, 0x5c,
	0x19, 0x1b,
	0x1a, 0x91,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x5c,
	0xd1, 0x48,	
 	0xd2, 0x58,
	0xd3, 0x48,
	0xd4, 0xa0,
	
	END_FLAG, END_FLAG
};

static const T_U8 CIF_MODE_ZOOM5_TAB[] = 
{
	0x16, 0x16,
	0x17, 0x3d,
	0x18, 0x5c,
	0x19, 0x1b,
	0x1a, 0x91,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x5c,
	0xd1, 0x48,	
 	0xd2, 0x58,
	0xd3, 0x48,
	0xd4, 0xa0,
	
	END_FLAG, END_FLAG
};

static const T_U8 QVGA_MODE_ZOOM0_TAB[] = 
{
	0x16, 0x08,
	0x17, 0x1a,
	0x18, 0xa4,
	0x19, 0x03,
	0x1a, 0xf2,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0xa4,
	0xd1, 0x78,	
 	0xd2, 0x50,
	0xd3, 0x3c,
	0xd4, 0x20,
		
	END_FLAG, END_FLAG
};

static const T_U8 QVGA_MODE_ZOOM1_TAB[] = 
{
	0x16, 0x0a,
	0x17, 0x24,
	0x18, 0x8f,
	0x19, 0x0b,
	0x1a, 0xd0,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x8f,
	0xd1, 0x68,	
 	0xd2, 0x50,
	0xd3, 0x3c,
	0xd4, 0x00,
	
	END_FLAG, END_FLAG
};

static const T_U8 QVGA_MODE_ZOOM2_TAB[] = 
{
	0x16, 0x06,
	0x17, 0x2d,
	0x18, 0x7d,
	0x19, 0x12,
	0x1a, 0xb5,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x7d,
	0xd1, 0x5a,	
 	0xd2, 0x50,
	0xd3, 0x3c,
	0xd4, 0x20,

	END_FLAG, END_FLAG
};

static const T_U8 QVGA_MODE_ZOOM3_TAB[] = 
{
	0x16, 0x05,
	0x17, 0x35,
	0x18, 0x6d,
	0x19, 0x18,
	0x1a, 0x9d,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x6d,
	0xd1, 0x4e,	
 	0xd2, 0x50,
	0xd3, 0x3c,
	0xd4, 0x80,

	END_FLAG, END_FLAG
};

static const T_U8 QVGA_MODE_ZOOM4_TAB[] = 
{
	0x16, 0x14,
	0x17, 0x3c,
	0x18, 0x5f,
	0x19, 0x1d,
	0x1a, 0x89,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x5f,
	0xd1, 0x44,	
 	0xd2, 0x50,
	0xd3, 0x3c,
	0xd4, 0xa0,

	END_FLAG, END_FLAG
};

static const T_U8 QVGA_MODE_ZOOM5_TAB[] = 
{
	0x16, 0x14,
	0x17, 0x3c,
	0x18, 0x5f,
	0x19, 0x1d,
	0x1a, 0x89,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x5f,
	0xd1, 0x44,	
 	0xd2, 0x50,
	0xd3, 0x3c,
	0xd4, 0xa0,

	END_FLAG, END_FLAG
};

static const T_U8 QCIF_MODE_ZOOM0_TAB[] = 
{
	0x16, 0x08,
	0x17, 0x1a,
	0x18, 0xa4,
	0x19, 0x03,
	0x1a, 0xf2,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0xa4,
	0xd1, 0x78,	
 	0xd2, 0x2c,
	0xd3, 0x24,
	0xd4, 0x20,

	END_FLAG, END_FLAG
};

static const T_U8 QCIF_MODE_ZOOM1_TAB[] = 
{
	0x16, 0x19,
	0x17, 0x2a,
	0x18, 0x83,
	0x19, 0x0b,
	0x1a, 0xd0,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x83,
	0xd1, 0x68,	
 	0xd2, 0x2c,
	0xd3, 0x24,
	0xd4, 0x80,

	END_FLAG, END_FLAG
};

static const T_U8 QCIF_MODE_ZOOM2_TAB[] = 
{
	0x16, 0x06,
	0x17, 0x32,
	0x18, 0x73,
	0x19, 0x12,
	0x1a, 0xb5,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x73,
	0xd1, 0x5a,	
 	0xd2, 0x2c,
	0xd3, 0x24,
	0xd4, 0x20,

	END_FLAG, END_FLAG
};

static const T_U8 QCIF_MODE_ZOOM3_TAB[] = 
{
	0x16, 0x07,
	0x17, 0x39,
	0x18, 0x64,
	0x19, 0x18,
	0x1a, 0x9d,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x64,
	0xd1, 0x4e,	
 	0xd2, 0x2c,
	0xd3, 0x24,
	0xd4, 0x20,

	END_FLAG, END_FLAG
};

static const T_U8 QCIF_MODE_ZOOM4_TAB[] = 
{
	0x16, 0x16,
	0x17, 0x3d,
	0x18, 0x5c,
	0x19, 0x1b,
	0x1a, 0x91,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x5c,
	0xd1, 0x48,	
 	0xd2, 0x2c,
	0xd3, 0x24,
	0xd4, 0xa0,

	END_FLAG, END_FLAG
};

static const T_U8 QCIF_MODE_ZOOM5_TAB[] = 
{
	0x16, 0x16,
	0x17, 0x3d,
	0x18, 0x5c,
	0x19, 0x1b,
	0x1a, 0x91,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x5c,
	0xd1, 0x48,	
 	0xd2, 0x2c,
	0xd3, 0x24,
	0xd4, 0xa0,

	END_FLAG, END_FLAG
};

static const T_U8 QQVGA_MODE_ZOOM0_TAB[] = 
{
	0x16, 0x08,
	0x17, 0x1a,
	0x18, 0xa4,
	0x19, 0x03,
	0x1a, 0xf2,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0xa4,
	0xd1, 0x78,	
 	0xd2, 0x28,
	0xd3, 0x1e,
	0xd4, 0x20,

	END_FLAG, END_FLAG
};

static const T_U8 QQVGA_MODE_ZOOM1_TAB[] = 
{
	0x16, 0x0a,
	0x17, 0x24,
	0x18, 0x8f,
	0x19, 0x0b,
	0x1a, 0xd0,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x8f,
	0xd1, 0x68,	
 	0xd2, 0x28,
	0xd3, 0x1e,
	0xd4, 0x00,

	END_FLAG, END_FLAG
};

static const T_U8 QQVGA_MODE_ZOOM2_TAB[] = 
{
	0x16, 0x06,
	0x17, 0x2d,
	0x18, 0x7d,
	0x19, 0x12,
	0x1a, 0xb5,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x7d,
	0xd1, 0x5a,	
 	0xd2, 0x28,
	0xd3, 0x1e,
	0xd4, 0x20,

	END_FLAG, END_FLAG
};

static const T_U8 QQVGA_MODE_ZOOM3_TAB[] = 
{
	0x16, 0x05,
	0x17, 0x35,
	0x18, 0x6d,
	0x19, 0x18,
	0x1a, 0x9d,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x6d,
	0xd1, 0x4e,	
 	0xd2, 0x28,
	0xd3, 0x1e,
	0xd4, 0x20,

	END_FLAG, END_FLAG
};

static const T_U8 QQVGA_MODE_ZOOM4_TAB[] = 
{
	0x16, 0x14,
	0x17, 0x3c,
	0x18, 0x5f,
	0x19, 0x1d,
	0x1a, 0x89,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x5f,
	0xd1, 0x44,	
 	0xd2, 0x28,
	0xd3, 0x1e,
	0xd4, 0xa0,

	END_FLAG, END_FLAG
};

static const T_U8 QQVGA_MODE_ZOOM5_TAB[] = 
{
	0x16, 0x14,
	0x17, 0x3c,
	0x18, 0x5f,
	0x19, 0x1d,
	0x1a, 0x89,
	
	0x81, 0xff,
	0x84, 0x02,
 	0xd0, 0x5f,
	0xd1, 0x44,	
 	0xd2, 0x28,
	0xd3, 0x1e,
	0xd4, 0xa0,

	END_FLAG, END_FLAG
};
*/

//setup exposure mode:whole, center, middle
static const T_U8 EXPOSURE_WHOLE_TAB[] = 
{
    END_FLAG, END_FLAG
};

static const T_U8 EXPOSURE_CENTER_TAB[] = 
{
    END_FLAG, END_FLAG
};

static const T_U8 EXPOSURE_MIDDLE_TAB[] = 
{
    END_FLAG, END_FLAG
};

/****************   Camera Brightness Table   ****************/
static const T_U8 BRIGHTNESS_0_TAB[] = 
{
	//Brightness -3
	0xD6, 0x30,
	END_FLAG, END_FLAG
};

static const T_U8 BRIGHTNESS_1_TAB[] = 
{
	//Brightness -2
	0xD6, 0x20,
	END_FLAG, END_FLAG
};

static const T_U8 BRIGHTNESS_2_TAB[] = 
{
	//Brightness -1
	0xD6, 0x10,
	END_FLAG, END_FLAG
};

static const T_U8 BRIGHTNESS_3_TAB[] = 
{
	//Brightness 0
	0xD6, 0x00,
	END_FLAG, END_FLAG
};

static const T_U8 BRIGHTNESS_4_TAB[] = 
{
	//Brightness +1
	0xD6, 0x10,
	END_FLAG, END_FLAG
};

static const T_U8 BRIGHTNESS_5_TAB[] = 
{
	//Brightness +2
	0xD6, 0x20,
	END_FLAG, END_FLAG
};

static const T_U8 BRIGHTNESS_6_TAB[] = 
{
	//Brightness +3
	0xD6, 0x30,
	END_FLAG, END_FLAG
};

/****************   Camera Contrast Table   ****************/
static const T_U8 CONTRAST_1_TAB[] = 
{
	//Contrast -3
	0xd8, 0x20,
	0xd7, 0x14,
	0xd6, 0x80,	
	END_FLAG, END_FLAG
};

static const T_U8 CONTRAST_2_TAB[] = 
{
	//Contrast -2
	0xd8, 0x20,
	0xd7, 0x18,
	0xd6, 0x48,	
	END_FLAG, END_FLAG
};

static const T_U8 CONTRAST_3_TAB[] = 
{
	//Contrast -1
	0xd8, 0x20,
	0xd7, 0x1c,
	0xd6, 0x20,
	END_FLAG, END_FLAG
};

static const T_U8 CONTRAST_4_TAB[] = 
{
	//Contrast 0
	0xd8, 0x20,
	0xd7, 0x20,
	0xd6, 0x00,
	END_FLAG, END_FLAG
};

static const T_U8 CONTRAST_5_TAB[] = 
{
	//Contrast +1
	0xd8, 0x20,									
	0xd7, 0x24,									
	0xd6, 0x00,									
	END_FLAG, END_FLAG
};

static const T_U8 CONTRAST_6_TAB[] = 
{
	//Contrast +2
	0xd8, 0x20,
	0xd7, 0x28,
	0xd6, 0x00,
	END_FLAG, END_FLAG
};

static const T_U8 CONTRAST_7_TAB[] = 
{
	//Contrast +3
	0xd8, 0x20,
	0xd7, 0x2c,
	0xd6, 0x00,
	END_FLAG, END_FLAG
};

/****************   Camera Saturation Table   ****************/
static const T_U8 SATURATION_1_TAB[] = 
{
	0xdb, 0x10,
	0xdc, 0x10,
	END_FLAG, END_FLAG
};

static const T_U8 SATURATION_2_TAB[] = 
{
	0xdb, 0x20,
	0xdc, 0x20,
	END_FLAG, END_FLAG
};

static const T_U8 SATURATION_3_TAB[] = 
{
	0xdb, 0x30,
	0xdc, 0x30,
	END_FLAG, END_FLAG
};

static const T_U8 SATURATION_4_TAB[] = 
{
	0xdb, 0x40,
	0xdc, 0x40,
	END_FLAG, END_FLAG
};

static const T_U8 SATURATION_5_TAB[] = 
{
	0xdb, 0x50,
	0xdc, 0x50,
	END_FLAG, END_FLAG
};

static const T_U8 SHARPNESS_0_TAB[] = 
{
    END_FLAG, END_FLAG
};

static const T_U8 SHARPNESS_1_TAB[] = 
{
    END_FLAG, END_FLAG
};

static const T_U8 SHARPNESS_2_TAB[] = 
{
    END_FLAG, END_FLAG
};

static const T_U8 SHARPNESS_3_TAB[] = 
{
    END_FLAG, END_FLAG
};

static const T_U8 SHARPNESS_4_TAB[] = 
{
    END_FLAG, END_FLAG
};

static const T_U8 SHARPNESS_5_TAB[] = 
{
    END_FLAG, END_FLAG
};

static const T_U8 SHARPNESS_6_TAB[] = 
{
    END_FLAG, END_FLAG
};

//the following codes define the AWB mode:
static const T_U8 AWB_AUTO_TAB[] = 
{
	0x13, 0xff, //AWB on
	0x14, 0xa2, 
	0x15, 0x00,
	0x2d, 0x00,
	0x2e, 0x00,
	END_FLAG, END_FLAG
};

static const T_U8 AWB_SUNNY_TAB[] = 
{
	0x13, 0xfd, //AWB off
	0x01, 0x5a,
	0x02, 0x5c,
	0x14, 0x92, 
	0x15, 0x00,
	0x2d, 0x00,
	0x2e, 0x00,
	END_FLAG, END_FLAG
};

static const T_U8 AWB_CLOUDY_TAB[] = 
{
	0x13, 0xfd, //AWB off
	0x01, 0x58,
	0x02, 0x60,
	0x14, 0xa2, 
	0x15, 0x00,
	0x2d, 0x00,
	0x2e, 0x00,
	END_FLAG, END_FLAG
};

static const T_U8 AWB_OFFICE_TAB[] = 
{
	0x13, 0xfd, //AWB off
	0x01, 0x84,
	0x02, 0x4c,
	0x14, 0xa2, 
	0x15, 0x00,
	0x2d, 0x00,
	0x2e, 0x00,
	END_FLAG, END_FLAG
};

static const T_U8 AWB_HOME_TAB[] = 
{
	0x13, 0xfd, //AWB off
	0x01, 0x96,
	0x02, 0x40,
	0x14, 0xa2, 
	0x15, 0x00,
	0x2d, 0x00,
	0x2e, 0x00,
	END_FLAG, END_FLAG
};

static const T_U8 AWB_NIGHT_TAB[] = 
{
	0x13, 0xff, //AWB on
	0x14, 0xb2, 
	0x15, 0xc8,
	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_NORMAL_TAB[] = 
{
	0xd5, 0x06,
	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_SEPIA_TAB[] = 
{
	0xd5, 0x1e,
	0xdd, 0x40,
	0xde, 0xa0,
	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_ANTIQUE_TAB[] = 
{
	0xd5, 0x1e,
	0xdd, 0xa0,
	0xde, 0x40,
	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_BLUISH_TAB[] = 
{
	0xd5, 0x1e,
	0xdd, 0xc0,
	0xde, 0x80,
	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_GREENISH_TAB[] = 
{
	0xd5, 0x1e,
	0xdd, 0x40,
	0xde, 0x40,
	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_REDDISH_TAB[] = 
{
	0xd5, 0x1e,
	0xdd, 0x80,
	0xde, 0xc0,
	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_NEGATIVE_TAB[] = 
{
	0xd5, 0x46,
	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_BW_TAB[] = 
{
	0xd5, 0x1e,
	0xdd, 0x80,
	0xde, 0x80,
	END_FLAG, END_FLAG
};

static const T_U8 EFFECT_BWN_TAB[] = 
{
	0xd5, 0x4e,
	0xdd, 0x80,
	0xde, 0x80,
	END_FLAG, END_FLAG
};

static const T_U8 PLL_1X_TAB[] = 
{

	END_FLAG, END_FLAG
};

static const T_U8 PLL_2X_TAB[] =
{

	END_FLAG, END_FLAG
};

static const T_U8 PLL_3X_TAB[] = 
{
	END_FLAG, END_FLAG
};

static const T_U8 PLL_4X_TAB[] = 
{
	END_FLAG, END_FLAG
};

/****************   Camera night/day mode   ****************/
static const T_U8 DAY_MODE_TAB[] = 
{
	0x13, 0xff, //AWB on
	0x14, 0xa2, 
	0x15, 0x00,
	0x2d, 0x00,
	0x2e, 0x00,
	END_FLAG, END_FLAG
};

static const T_U8 NIGHT_MODE_TAB[] = 
{
	0x13, 0xff, //AWB on
	0x14, 0xb2, 
	0x15, 0xc8,
	END_FLAG, END_FLAG
};

#endif
#endif

