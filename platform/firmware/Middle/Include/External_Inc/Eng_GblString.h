/**
 * @file Eng_GblString.h
 * @brief This header file is for global string definition and process function prototype
 *
 */

#ifndef __ENG_LANGUAGE_H__
#define __ENG_LANGUAGE_H__

#include "anyka_types.h"
#include "Ctl_IconMenu.h"
#include "Ctl_IconExplorer.h"

#include "Fwl_Initialize.h"
typedef enum {
    /* the followings belong to public menu */
    mnSWITCH_MENU,

    mnMAIN_MENU,

    mnMP3_MENU,
    mnMP3_REPEAT_MODE,
    mnMP3_TONE_MODE,
    mnMP3_PITCH_MODE,
    mnMP3_PRE_TIME,
    mnMP3_SPEED,
    mnMP3_SAVELIST,     //add by he
    mnMOVIE_SAVELIST,
    mnAUDIOPLYR_LIST_MENU,
    mnAUDIOPLYR_LIST_MYLIST_MENU,
    mnAUDIOPLYR_LIST_MYLIST_CUSTOM_MENU,
    mnAUDIOPLYR_LIST_CLASSLIST_MENU,
    mnAUDIO_ROOT,
    mnAUDIOPLYR_LIST_MP3,

    mnFM_MENU,
    mnFM_STATION_LIST,
    mnFM_STATION_LIST_MENU,
    mnFM_SAVE_STATION,
    mnFM_DEL_STATION,
    mnFM_CHG_AREA,

    mnCAP_MENU,
    mnCAP_BRIGHTNESS,
    mnCAP_COLOR,
    mnCAP_CONTRAST,
    mnCAP_TIMER,
    mnCAP_QUALITY,
    mnCAP_MODE,
    mnCAP_DC_SHOT_MODE,

    /*Camera*/
    mnVIDEO_REC_MENU,
    mnVIDEO_REC_SIZE,

    mnIMG_MENU,
    mnIMG_SLIDE,
    mnVIDEO_MENU,

    mnGAME_MENU,
    mnGAME_OPER_MENU,
    mnSET_NES_MENU,
    mnSET_SNES_MENU,
    mnSET_GBA_MENU,
    mnSET_MD_MENU,
    mnSET_FLASH_MENU,
    mnSET_FLASH_QUALITY,
    mnSET_NES_GAME_KEYMAP,
    mnSET_SNES_GAME_KEYMAP,
    mnSET_GBA_GAME_KEYMAP,
    mnSET_MD_GAME_KEYMAP,

    mnEBOOK_OPER_MENU,
    mnEBOOK_SCROLL_SET,
    mnEBOOK_SCROLL_VALUE,

    mnSETUP_MENU,
    mnLANGUAGE_MENU,
    mnFONTSIZE_MENU,
    mnPERSONAL_MENU,
    mnEXPLORER_MENU,
    mnPOFF_TIME,
    mnLOWBAT_TIME,
    mnSS_TIME,
    mnSET_PATH_MENU,
 #ifdef SUPPORT_AUTOTEST   
    mnAUTOTEST_MENU,
    mnAUTOTEST_STARTRECORD_MENU,
	mnAUTOTEST_STARTTEST_NORMALTEST_MENU,
	mnAUTOTEST_STARTTEST_FUNCTIONTEST_MENU,
	mnAUTOTEST_STARTTEST_PERFORMANCETEST_MENU,
	mnAUTOTEST_STARTTEST_PRESSTEST_MENU,
	mnAUTOTEST_STARTTEST_CROSSTEST_MENU,
#endif

    mnCHECK_MENU,

    mnTOOLBOX_MENU,
    mnAUDIORECORDER_MENU,
    mnAUDIORECORDER_LIST_MENU,
    mnAUDIO_RECORD_SET_MODE,
    mnAUDIO_RECORD_SET_RATE,
	mnAUDIO_RECORD_SET_SCENEMODE,
	
    mnSET_MENU_BKGRND,

    mnTIMESET_MENU,
    mnSET_ALARM_MENU,
    mnSET_DAY_ALARM_MENU,
    mnSET_WEEK_ALARM_MENU,

    mnANIMATED_CONFIG, // animated manage
    mnPROJECT_MENU,

#ifdef	SUPPORT_FM
	mnFMRECORDER_MENU, //fm recorder
#endif	
	mnFONT_SIZE_SET_MENU,

#ifdef SUPPORT_TVOUT
	mnDISPLAY_SWITCH,
#endif

#ifdef SUPPORT_VFONT	
	mnVFONT_SET_MENU,
	mnVFONT_OPTION_MENU,
#endif

#ifdef SUPPORT_NETWORK
	mnNETWORK_MENU,
#endif

    MAX_REC_MENU_NUM
} T_eREC_MENU_ID;       /* menu ID list */

typedef enum {
    /* common string */
    csKEY_LOCKED,           csKEY_UNLOCKED,
    csSUCCESS,              csFAILURE,
    csSUCCESS_DONE,         csFINISH_DONE,      csFAILURE_DONE,
    csEMPTY_DONE,           csEMPTY_FAVORITE_DONE,
    csWAITING,              csSEARCHING,       csSWITCH_ON,
    csSWITCH_OFF,           csFILE_INVALID,
    csFILE_NOT_EXIST,       csFOLDER_AUDIO_NOT_EXIST,
    csSTAND_BY,             csSPACE_EMPTY,
    csFILENAME_LONG,        csFILE_TOO_MANY,
    csFILE_MKDIR_FAILURE,    csFILE_DELDIR_FAILURE,
    csFILE_DELFILE_FAILURE, csOUT_PATH_DEEP,
    csNULL,

    csLOW_BATTERY,          csLOW_BATTERY_POWEROFF,	csFILE_FORMAT_ERROE,

    csUSB_IN_QUESTION,      csUSB_IN_STATUS,        csUSB_OUT_STATUS,

    csFILE_DELETING,        csFILE_DELETE_CANCLE,
    csSAVESPACEFULL,        csMEM_NOT_ENOUGH,    csNOT_SUPT_SIZE, csMaxRecordTime,

    csMEMORY_TOTAL,         csMEMORY_CURRENT,
    csVERSION_SOFTWARE,     csVERSION_HARDWARE,     csVERSION_AUDIO,

    csFILESYSTEM_INUSE,     csLOADING,		csINITIALIZING,

	// USB
	csUSB_MOUNT_SHOW,
	csUSB_MOUNT_FAIL,
#ifdef USB_HOST
    /*USB HOST string */
    csUSBHOST_MOUNT_ERROR,  csUSBHOST_MOUNT_OK,     csUSBHOST_POPUP,
    csUSBHOST_CONNECTING,   csUSBHOST_INITIALING,   csUSBDISK_BAT_LOW,
#endif

    /* Clock string */
    csCLK_ALARM,
    csCLK_DELAY,

    /* Mp3 string */
    csMP3_DELETE,           csMP3_DELETE_ALL,
    csMP3_DELETE_NOTE,      csMP3_DELETE_ALL_NOTE,
    csMP3_DELETE_LIST_NOTE, csMP3_DELETE_ALL_LIST_NOTE,
    csMP3_DELETE_NONE,      csMP3_UPDATE_AUDIOLIB_NOTE, 
    csMP3_LIST_TITLE,
    csMP3_STOP,             csMP3_PLAY,
    csMP3_PAUSE,            csMP3_ERROR,
    csMP3_PRETIME,
    csMP3_AR,               csMP3_TI,
    csMP3_AL,               csMP3_BY,
    csMP3_KEY,              csMP3_LYLIC,
    csMP3_REPEAT_NORMAL,    csMP3_REPEAT_SINGLE,
    csMP3_REPEAT_RANDOM,    csMP3_REPEAT_ALL,
    csMP3_TONE_NORMAL,      csMP3_TONE_CLASSIC,
    csMP3_TONE_ROCK,        csMP3_TONE_POP,
    csMP3_TONE_JAZZ,
    csMP3_EXPLORER_ADD_LIST,    csMP3_ADD_LIST_NOTE,
    csMP3_NOT_ENOUGH_SPACE,     csMP3_NOW_PLAY_TIME,
    csMP3_TOTAL_PLAY_TIME,      csMP3_SAVE_SINGER,
    csMP3_SAVE_ALBUM,       csAUDIO_FILE_ERROR,

	/* Visual string */
	csVISUAL_AUDIO_ENABLE,  csVISUAL_AUDIO_DISABLE,

    /* karaoke string */
    csKOK_DELETE,           csKOK_DELETE_ALL,
    csKOK_DELETE_NOTE,      csKOK_DELETE_ALL_NOTE,
    csKOK_DELETE_NONE,      csKOK_ERROR,
    csKOK_LIST_TITLE_KOK,   csKOK_LIST_TITLE_MOVIE,

    /* ebook string */
    csEBK_DELETE,           csEBK_DELETE_NOTE,
    csEBK_DELETE_FOLDER,    csEBK_DELETE_ALL_NOTE,
    csEBK_DELETE_NONE,      csEBK_ERROR,
    csEBOOK_LIST_TITLE,     
    csEBK_SCROLL_INTERVAL,

    /* Camera string */
    csCAMERA_FOLDER_TABOO, csCAP_BRIGHTNESS, csCAP_COLOR, csCAP_CONTRAST,
    csCAMERA_CAPTURE_PHOTO, csCAMERA_CAPTURE_VIDEO,
    csCAMERA_INIT_FAILED,   csCAMERA_JPEG_ENCODE_FAILED,
    csCAMERA_PARA_FAILED,   csCAMERA_CAPTURE_FAILED,
    csCAMERA_IMG_CONVERT_FAILED,                        csCAMERA_FILE_SAVE_FAILED,
    csCAMERA_SAVE_PHOTO,    csCAMERA_SAVE_NAME,
    csCAMERA_SAVE_NOTE,     csCAMERA_SAVE_CANCLE, csRecord_EXITING,
    //for pc camera
    csPCCAMERA_ENTRY,   csPCCAMERA_USED,    csUSBDISK_USED,

    /* fm string */
    csFM_CHANNEL,        csFM_STOP,           csFM_PAUSE,      csFM_PLAY,
    csFM_SEARCH,         csFM_INIT_FAILED,    csFM_EUROPE,     csFM_JAPAN,
    csFM_AMERICA,        csFM_SCANOVER,       csFM_HEADPHONE,  csFM_LIST_FULL,
    csFM_FREQ_EXIST,     csFM_DEL_NOTE,       csFM_DEL_ALL_NOTE,

    csSTOCK_NOMEM,
    /* image string */
    csIMG_DELETE,           csIMG_DELETE_ALL,
    csIMG_DELETE_NOTE,      csIMG_DELETE_ALL_NOTE,
    csIMG_CONVERT_BMPSTREAM_FAIL,
    csIMG_DELETE_NONE,      csIMG_LIST_TITLE,
    /*emap string */
    csEMAP_LIST_TITLE,      csEMAP_PROPORTION_WRONG,

    /* video string */
    csVIDEO_LIST,           csVIDEO_FILE_ERROR,
    csVIDEO_RECORD_BEGIN,
    csVIDEO_RECORD_SAVE,    csVIDEO_RECORD_SAVE_NOW,
    csVIDEO_RECORD_UNSAVE, csVIDEO_RECORD_SYSERR,
    csVIDEO_DELETE_NOTE, csVIDEO_DELETE_ALL_NOTE,

    /*audio record string */
    csAUDIOREC_RECORD_FAILURE, csAUDIOREC_REPLAY_FAILURE,
    csAUDIOREC_SAVE_FAILURE, csAUDIOREC_SAVE_OK, csAUDIOREC_LIST_TITLE,
    csAUDIOREC_DELETE_NOTE, csAUDIOREC_DELETE_ALL_NOTE, csAUDIOREC_REC_TOO_SHORT,

    /*game string*/
    csGAME_BOAT,            csGAME_EGG,
    csGAME_21,              csGAME_BLOCK,
    csGAME_RACEING,         csGAME_RECT,
    csGAME_HERO,            csGAME_BEAD,
    csGAME_LOAD_NOTE,       csGAME_LOAD_ERROR_NOTE,
    csGAME_KEYMAP_NOTE,
    csGAME_HELP_BOAT,       csGAME_HELP_EGG,
    csGAME_HELP_21,         csGAME_HELP_BLOCK,
    csGAME_HELP_RACEING,    csGAME_HELP_RECT,
    csGAME_HELP_HERO,       csGAME_HELP_BEAD,
    csNES_LIST_TITLE,       csSNES_LIST_TITLE,
    csGBA_LIST_TITLE,csMD_LIST_TITLE,

	/*flash string*/
	csFLASH_LIST_TITLE,
	csFLASH_INVALID_VERSION,
	csFLASH_INVALID_SIZE,
	csFLASH_INVALID_FILE,

    /* setup string */
	csSYS_UPDATING, csSYS_UPDATENOFILE, csSYS_UPDATERROR, 
	csSYS_UPDATEFINISH, csSYS_LOWBATTERY,csSETUP_FACTORY, 
	csSYSTEM_REBOOT, csLCD_BRIGHTNESS, csLCD_CONTRAST,
	csADJUST_BATTERY_NOTE, csADJUST_BATTERY_RATE,  csCHANGE_LANG_POWER_OFF,

#ifdef SUPPORT_AUTOTEST
	//add by lixngjian
	csSETUP_AUTOTEST_RECORD,
	csSETUP_AUTOTEST_TEST_NORMALTEST,
	csSETUP_AUTOTEST_TEST_FUNCTIONTEST,
	csSETUP_AUTOTEST_TEST_PERFORMANCETEST,
	csSETUP_AUTOTEST_TEST_PRESSTEST,
	csSETUP_AUTOTEST_TEST_CROSSTEST,
	csSETUP_AUTOTEST_STOP_RECORD,
	csSETUP_AUTOTEST_CANCEL_RECORD,	
	csSETUP_AUTOTEST_RECORDING,	
	csSETUP_AUTOTEST_RECORDING_NOTTEST,	
	csSETUP_AUTOTEST_TESTING_NOTTEST,
	csSETUP_AUTOTEST_FINISH_TEST_DIRECTFILE,
	csSETUP_AUTOTEST_FINISH_TEST_SCRIPTFILE,
	csSETUP_AUTOTEST_RECODE_SAVEORNO,
	csSETUP_AUTOTEST_DIRECTFILE_FORMATERROR,
	csSETUP_AUTOTEST_SCRIPTFILE_FORMATERROR,
	
#endif
    /*time set*/
    csWARNING_EXCEED_MAX_YEAR,

    /* explorer string */
    csEXPLORER_TITLE,       csEXPLORER_CURFOLDER,   csEXPLORER_UPFOLDER,
    csEXPLORER_DELETE_NOTE, csEXPLORER_DELETE_FOLDER, csEXPLORER_DELETE_ALL_NOTE,
    csEXPLORER_ATTRIB,      csEXPLORER_PATH,        csEXPLORER_TYPE,
    csEXPLORER_SIZE,        csEXPLORER_UNIT,
    csEXPLORER_CREATETIME,  csEXPLORER_ACCESSTIME,
    csEXPLORER_WRITETIME,   csEXPLORER_COPY,        csEXPLORER_CUT,
    csEXPLORER_SAMEFILE,    csEXPLORER_NOFILE,      csEXPLORER_SAME_PATH,
    csEXPLORER_FILE_INFO,   csEXPLORER_FREE_SIZE,   csEXPLORER_WAIT,

    /* set default path */
    csSET_DEF_PATH_SET,

    /* check string */
    csCHECK_AUTO_NOTE,
    csCHECK_AUTO_FAILED_LCD,    csCHECK_AUTO_FAILED_KEYPAD,
    csCHECK_AUTO_FAILED_FM,  csCHECK_AUTO_FAILED_CAMERA,
    csCHECK_AUTO_FAILED_GPIO,   csCHECK_AUTO_FAILED_FS,
    csCHECK_AUTO_FAILED_POWER,  csCHECK_AUTO_FAILED_CHARGE,
    csCHECK_AUTO_SUCCESS_LCD,   csCHECK_AUTO_SUCCESS_KEYPAD,
    csCHECK_AUTO_SUCCESS_FM, csCHECK_AUTO_SUCCESS_CAMERA,
    csCHECK_AUTO_SUCCESS_GPIO,  csCHECK_AUTO_SUCCESS_FS,
    csCHECK_AUTO_SUCCESS_POWER, csCHECK_AUTO_SUCCESS_CHARGE,

    csCHECK_LCD_WHITE,      csCHECK_LCD_BLACK,
    csCHECK_LCD_RED,        csCHECK_LCD_GREEN,      csCHECK_LCD_BLUE,

    csCHECK_KEYPAD_OK,      csCHECK_KEYPAD_UP,      csCHECK_KEYPAD_DOWN,
    csCHECK_KEYPAD_LEFT,    csCHECK_KEYPAD_RIGHT,   csCHECK_KEYPAD_VOICEUP,
    csCHECK_KEYPAD_VOICEDOWN, csCHECK_KEYPAD_MENU,  csCHECK_KEYPAD_CLEAR,

    csCHECK_FM_NOTE, csFM_TITLE,

    csCHECK_CAMERA_NOTE,

    csCHECK_GPIO_BACKOFF,   csCHECK_GPIO_BACKON,
    csCHECK_GPIO_LEDOFF,    csCHECK_GPIO_LEDON,

    csCHECK_FS_CREATE,      csCHECK_FS_WRITE,       csCHECK_FS_CLOSE,
    csCHECK_FS_OPEN,        csCHECK_FS_READ,        csCHECK_FS_DELETE,
    csCHECK_FS_SUCCESS,     csCHECK_FS_FAILED,

    csCHECK_CHARGE_NOTE,    csCHECK_CHARGE_SUCCESS, csCHECK_CHARGE_FAILED,

    csNANDFLASH,    csSD_DISK,  csU_DISK,
    
    csSAVECHANNELLIST, csCREATFILEFAIL,

    /* Message box button string */
    csMBOX_BUTTON_OK,       csMBOX_BUTTON_YES,      csMBOX_BUTTON_NO,
    csMBOX_BUTTON_CANCEL,   csMBOX_BUTTON_RETRY,    csMBOX_BUTTON_RETURN,

    csALARM_SOUND_SEL,          csSELECT_OK,

    /*calculator sting*/
    csTOOL_CALCULATOR,    csTOOL_CALCU_OVERFLOW, csTOOL_CALCU_COMPLEXNUMBER, 
    csTOOL_CALCU_DIVISIONZERO,
    //thumbnail image
    csImg_thumbnail,
    
	//vector font 
	csVFONT_SET, csVFONT_STYLE, csVFONT_SIZE, csVFONT_DEF, 
	csVFONT_RECOVER, csVFONT_SIZE_WARNING, csVFONT_INSTALL,
	csVFONT_INSTALL_SUCCESS, csVFONT_TEXT, csVFONT_MENU,

    csEXPLORER_FORMAT_SD, //add by LHS
    csEXPLORER_MOUNT_FAIL,
    csEXPLORER_MOUNT_OK,
    csEXPLORER_UNMOUNT_FAIL,
    csEXPLORER_UNMOUNT_OK,
    csREFRESH_AUDIO_LIST,
    csREFRESH_MEDIA_LIST,
    csFM_RECORDER,
    csSETUP_NO_DRIVER,
    csCOMMAND_SENT,
    csNOT_IN_AUDIOLIST,
    csNOT_IN_VIDEOLIST,
    csBUSY_CANNOT_DEL,
    
    MAX_CSTM_STR_NUM
} T_eCSTM_STR_ID;   /* custom string ID, use GetCustomString() to get the string by ID and current language */

typedef enum {
    ctNULL,
    ctSUCCESS,              ctFAILURE,
    ctERROR,                ctHINT,                 ctWARNING,

    ctIMG_MANAGEMENT,

    ctPOFF_PIC,             ctPON_PIC,              ctPON_AUDIO,
    ctSTDB_PIC,

    ctGAME_INFO,            ctGAME_SCORE,

    ctKOK_INFO,             ctCLR_SELECT,         ctSET_DEF_PATH,
    ctBOOK_CONTENT,

    ctLCDBRIGHTNESS,        ctLCDCONTRAST,          ctCAPBRIGHTNESS,
    etEDIT_DATE,            etEDIT_TIME,
//  ctTIMEHOUR,             ctTIMEMINUTE,           ctTIMESECOND,
    ctCAPCONTRAST,          ctCAPCOLOR,
    ctADJUSTSPEAKER,
    ctFINISH,

    MAX_CSTM_T_NUM
} T_eCSTM_T_ID;     /* custom title ID, use GetCustomTitle() to get the title by ID and current language */

typedef enum {
#ifdef SUPPORT_AUDIOPLAYER
    eMAIN_ICON_AUDIO_PLAYER,
#endif
#ifdef SUPPORT_FM
    eMAIN_ICON_FM,
#endif
#ifdef CAMERA_SUPPORT
    eMAIN_ICON_CAMERA,
#endif
#ifdef SUPPORT_AUDIOREC
    eMAIN_ICON_AUDIO_RECORDER,
#endif

#ifdef SUPPORT_VIDEOPLAYER
    eMAIN_ICON_VIDEO_PLAYER,
#endif
#ifdef SUPPORT_IMG_BROWSE
    eMAIN_ICON_IMG_BROWSE,
#endif
#ifdef SUPPORT_EBK
    eMAIN_ICON_EBK,
#endif
#ifdef INSTALL_GAME
    eMAIN_ICON_GAME,
#endif
#ifdef SUPPORT_TOOLBOX
    eMAIN_ICON_TOOL_BOX,
#endif
#ifdef SUPPORT_EXPLORER
    eMAIN_ICON_EXPLORER,
#endif
#ifdef SUPPORT_SYS_SET
    eMAIN_ICON_SYSTEM_SET,
#endif
    //eMAIN_ICON_TIME_SET,
#ifdef SUPPORT_FLASH
    eMAIN_ICON_FLASH_PLAYER,
#endif

#ifdef SUPPORT_NETWORK
	eMAIN_ICON_NETWORK,
#endif

    eMAIN_ICON_MAX_NUM
}T_eMAIN_ICON_ID;

extern T_eMAIN_ICON_ID ItemID[];

T_pCWSTR GetCustomString(T_eCSTM_STR_ID ID);
T_pCWSTR GetCustomTitle(T_eCSTM_T_ID ID);
T_BOOL ResetMainMenuText(T_eREC_MENU_ID ID, T_ICONMENU *pIconMenu);
T_BOOL GetMainMenuContent(T_eREC_MENU_ID ID, T_ICONMENU *pIconMenu);
T_BOOL GetMenuStructContent(T_ICONEXPLORER *pIconExplorer, T_eREC_MENU_ID Id);

#endif
